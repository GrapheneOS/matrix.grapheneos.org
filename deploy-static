#!/bin/bash

set -o errexit -o nounset -o pipefail

touch lock
exec {fd}< lock
if ! flock -n $fd; then
    echo already processing/deploying static files >&2
    exit 1
fi

./process-static $fd

remote=root@matrix.grapheneos.org
active=$(ssh $remote readlink /srv/element.grapheneos.org)

if [[ $active = /srv/element.grapheneos.org_a ]]; then
    target=/srv/element.grapheneos.org_b
else
    target=/srv/element.grapheneos.org_a
fi

echo active is $active
echo target is $target
echo

ssh $remote "rm -rf $target && cp -a $active $target"
rsync -rpcv --fsync --chmod=D755,F644 --delete static-tmp/ $remote:$target
ssh $remote "ln -snf $target /srv/element.grapheneos.org && sync /srv/element.grapheneos.org"

echo "root $target;" > nginx-tmp/root_element.grapheneos.org.conf
rsync -rptcv --fsync --chmod=D755,F644 --delete nginx-tmp/{nginx.conf,mime.types,root_element.grapheneos.org.conf,snippets} $remote:/etc/nginx/
rsync -ptcv --fsync --chmod=755 {local-backup,remote-backup} $remote:/usr/local/bin/
rsync -ptcv --fsync --chmod=644 systemd/system/remote-backup.timer $remote:/etc/systemd/system/remote-backup.timer
rsync -ptcv --fsync --chmod=644 systemd/system/remote-backup.service $remote:/etc/systemd/system/remote-backup.service
ssh $remote nginx -s reload

echo
echo active is now $target
